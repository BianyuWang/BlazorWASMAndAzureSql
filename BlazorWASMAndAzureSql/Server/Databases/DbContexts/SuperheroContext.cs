// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using BlazorWASMAndAzureSql.Server.databases.models;

namespace BlazorWASMAndAzureSql.Server.databases.DbContexts
{
    public partial class SuperheroContext : DbContext
    {
        public SuperheroContext()
        {
        }

        public SuperheroContext(DbContextOptions<SuperheroContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Peoples> Peoples { get; set; }
        public virtual DbSet<Planets> Planets { get; set; }
        public virtual DbSet<RefPlanetSpecies> RefPlanetSpecies { get; set; }
        public virtual DbSet<Species> Species { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Peoples>(entity =>
            {
                entity.Property(e => e.BirthYear)
                    .HasMaxLength(10)
                    .HasColumnName("birth_year")
                    .IsFixedLength();

                entity.Property(e => e.EyeColor)
                    .HasMaxLength(50)
                    .HasColumnName("eye_color");

                entity.Property(e => e.Gender)
                    .HasMaxLength(10)
                    .HasColumnName("gender");

                entity.Property(e => e.HairColor)
                    .HasMaxLength(50)
                    .HasColumnName("hair_color");

                entity.Property(e => e.Height).HasColumnType("decimal(10, 2)");

                entity.Property(e => e.Mass).HasColumnName("mass");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.PlanetId).HasColumnName("planetId");

                entity.Property(e => e.SkinColor)
                    .HasMaxLength(50)
                    .HasColumnName("skin_color");

                entity.Property(e => e.Url)
                    .HasMaxLength(100)
                    .HasColumnName("url");
            });

            modelBuilder.Entity<Planets>(entity =>
            {
                entity.ToTable("planets");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Climate)
                    .HasMaxLength(50)
                    .HasColumnName("climate")
                    .IsFixedLength();

                entity.Property(e => e.Diameter).HasColumnName("diameter");

                entity.Property(e => e.Gravity)
                    .HasMaxLength(50)
                    .HasColumnName("gravity")
                    .IsFixedLength();

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.OrbitalPeriod).HasColumnName("orbital_period");

                entity.Property(e => e.Population).HasColumnName("population");

                entity.Property(e => e.RotationPeriod).HasColumnName("rotation_period");

                entity.Property(e => e.SurfaceWater)
                    .HasMaxLength(10)
                    .HasColumnName("surface_water")
                    .IsFixedLength();

                entity.Property(e => e.Terrain)
                    .HasMaxLength(50)
                    .HasColumnName("terrain")
                    .IsFixedLength();

                entity.Property(e => e.Url)
                    .HasMaxLength(100)
                    .HasColumnName("url");
            });

            modelBuilder.Entity<RefPlanetSpecies>(entity =>
            {
                entity.ToTable("ref_planet_species");

                entity.Property(e => e.Id).HasColumnName("id");
            });

            modelBuilder.Entity<Species>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.AverageHeight)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("average_height");

                entity.Property(e => e.AverageLifespan)
                    .HasMaxLength(50)
                    .HasColumnName("average_lifespan");

                entity.Property(e => e.Classification)
                    .HasMaxLength(50)
                    .HasColumnName("classification");

                entity.Property(e => e.Designation)
                    .HasMaxLength(50)
                    .HasColumnName("designation");

                entity.Property(e => e.HomeworldId).HasColumnName("homeworldId");

                entity.Property(e => e.Language)
                    .HasMaxLength(50)
                    .HasColumnName("language");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.Url)
                    .HasMaxLength(100)
                    .HasColumnName("url");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}