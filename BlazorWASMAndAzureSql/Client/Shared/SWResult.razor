
@using  Newtonsoft.Json.Linq;
@using BlazorWASMAndAzureSql.Shared
@using BlazorWASMAndAzureSql.Client.Services.SWService
@inject NotificationService NotificationService

@inject ISuperheroService superheroService;


<div class="row">
    <div>
        <RadzenCard class="m-3  ">
            <h3 class="h5">Result @SWType</h3>
            <div class="d-flex flex-row">
                <RadzenImage Path="@photoPath" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                <div>

                    @{ int line = 0;
                        foreach (var item in json)
                        {
                            line++;
                            if (line < 6)
                            {
                                <div class="mt-3">@item.Key</div>
                                <div> <b>@item.Value.ToString()</b></div>
                            }
                            else
                            {


                                <div class="mt-3" style="display: @ShowOrHide">@item.Key</div>
                                <div style="display:@ShowOrHide"> <b>@item.Value.ToString()</b></div>
                            }
                        }
                    }
                </div>
                <div><RadzenButton Click="@(args => ChangeVisibilty(ShowOrHide))">@btnName</RadzenButton> </div>
            </div>
        </RadzenCard>

    </div>
</div>
<div><RadzenButton Disabled="@disableBTN" Click="@(args => SaveToDB())">@SaveBTNText </RadzenButton></div>


@code {


    [Parameter]
    public string SWQuestResult { get; set; }

    [Parameter]
    public string SWType { get; set; }

    [Parameter]

    public bool disableBTN { get; set; }

    JObject json;

    public string photoPath;

    public static List<string> termAccept = new List<string> { "planets", "people", "species" };

    // bool disableBTN= false;
    string ShowOrHide;
    string btnName;
    string SaveBTNText = "Copy To My Database";
    SuperheroEntity entity = new SuperheroEntity();
    protected override Task OnInitializedAsync()
    {



        ParseData();
        ShowOrHide = "none";
        btnName = ShowOrHide == "none" ? "Show More..." : "Hide";
        return base.OnInitializedAsync();
    }
    public void reloadCompent()
    {
        ParseData();
        StateHasChanged();
    }

    public void ParseData()
    {

        json = JObject.Parse(SWQuestResult);
        entity.jsonStr = json.ToString();
        entity.tableName = SWType;

        //check if already in the db


        SaveBTNText = "Copy To My Database";

        photoPath = termAccept.Contains(SWType) ? $"images/{SWType}.jpg" : $"images/swlogo.jpg";

    }



    void ChangeVisibilty(string action)
    {

        ShowOrHide = action == "none" ? "block" : "none";
        btnName = ShowOrHide == "none" ? "Show More..." : "Hide";
    }

    async Task SaveToDB()
    {

        entity =
                await superheroService.InsertAsync(entity);
        if (entity != null)
        {
            disableBTN = true;
            SaveBTNText = "Saved";
            ShowNotification(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Deleted successfully",
                Detail = $"Record has been added into {entity.tableName} table",
                Style = "width: 400px; position: absolute; left: -1000px;",
                Duration = 4000
            });
        }
    }

    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);

    }
}
